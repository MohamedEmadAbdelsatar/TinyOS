/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package os_gui1;


import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;



/**
 *
 * @author Mohamed Emad
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    private final JFileChooser openFile;
    private BufferedImage originalBI;
    int t =0;
    public Home() {
       
        this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        this.setUndecorated(true);
        //this.setAlwaysOnTop(true);
        this.setResizable(true);
        this.setVisible(true);
        initComponents();
        Toolkit tk = Toolkit.getDefaultToolkit();
        int xsize=(int)tk.getScreenSize().getWidth();
        int ysize=(int)tk.getScreenSize().getHeight();
        this.setSize(xsize,ysize);    
        openFile = new JFileChooser();
        openFile.setCurrentDirectory(new java.io.File("E:\\"));
        openFile.setFileFilter(new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes()));
        addMouseListener(new PopClickListener());
        new Thread(){
            public void run(){
                while (t==0){
                    Calendar cal = new GregorianCalendar();
                    
                    int h = cal.get(Calendar.HOUR);
                    int m = cal.get(Calendar.MINUTE);
                    int s = cal.get(Calendar.SECOND);
                    int am_pm = cal.get(Calendar.AM_PM);
                    int d = cal.get(Calendar.DAY_OF_MONTH);
                    int mon = cal.get(Calendar.MONTH);
                    int y = cal.get(Calendar.YEAR);
                    String date=d+"/"+mon+"/"+y;
                    Date.setText(date);
                    String d_n = "";
                    if (am_pm == 1){
                        d_n = "PM";
                    } else {
                        d_n = "AM";
                    }
                    String t = h + ":" + m + ":" + s + " " +d_n;
                    
                    Clock.setText(t);
                }
            }
        }.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CreateFile = new javax.swing.JButton();
        OpenImage = new javax.swing.JButton();
        TextEditor = new javax.swing.JButton();
        MusicPlayer = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        Clock = new javax.swing.JLabel();
        Date = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        getContentPane().setLayout(null);

        CreateFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Open_50px.png"))); // NOI18N
        CreateFile.setToolTipText("File System");
        CreateFile.setBorder(null);
        CreateFile.setBorderPainted(false);
        CreateFile.setContentAreaFilled(false);
        CreateFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CreateFile.setFocusPainted(false);
        CreateFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateFileActionPerformed(evt);
            }
        });
        getContentPane().add(CreateFile);
        CreateFile.setBounds(0, 0, 80, 70);

        OpenImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Photo Gallery_50px.png"))); // NOI18N
        OpenImage.setToolTipText("Image Viewer");
        OpenImage.setBorder(null);
        OpenImage.setBorderPainted(false);
        OpenImage.setContentAreaFilled(false);
        OpenImage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        OpenImage.setFocusPainted(false);
        OpenImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenImageActionPerformed(evt);
            }
        });
        getContentPane().add(OpenImage);
        OpenImage.setBounds(0, 70, 70, 70);

        TextEditor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Align Text Left_50px.png"))); // NOI18N
        TextEditor.setToolTipText("Text Editor");
        TextEditor.setBorder(null);
        TextEditor.setBorderPainted(false);
        TextEditor.setContentAreaFilled(false);
        TextEditor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TextEditor.setFocusPainted(false);
        TextEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextEditorActionPerformed(evt);
            }
        });
        getContentPane().add(TextEditor);
        TextEditor.setBounds(10, 130, 50, 70);

        MusicPlayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Musical Notes_50px.png"))); // NOI18N
        MusicPlayer.setToolTipText("MUSIC");
        MusicPlayer.setBorder(null);
        MusicPlayer.setBorderPainted(false);
        MusicPlayer.setContentAreaFilled(false);
        MusicPlayer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MusicPlayer.setFocusPainted(false);
        MusicPlayer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                MusicPlayerMouseReleased(evt);
            }
        });
        MusicPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MusicPlayerActionPerformed(evt);
            }
        });
        getContentPane().add(MusicPlayer);
        MusicPlayer.setBounds(0, 190, 70, 70);

        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Close Window_50px.png"))); // NOI18N
        Exit.setToolTipText("EXIT");
        Exit.setBorder(null);
        Exit.setBorderPainted(false);
        Exit.setContentAreaFilled(false);
        Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exit.setFocusPainted(false);
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        getContentPane().add(Exit);
        Exit.setBounds(0, 260, 70, 70);

        Clock.setFont(new java.awt.Font("DS-Digital", 0, 60)); // NOI18N
        Clock.setForeground(new java.awt.Color(0, 255, 153));
        Clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Clock.setText("7:45:50 PM");
        getContentPane().add(Clock);
        Clock.setBounds(1000, 620, 290, 70);

        Date.setFont(new java.awt.Font("DS-Digital", 0, 60)); // NOI18N
        Date.setForeground(new java.awt.Color(0, 255, 135));
        Date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Date.setText("19/12/2017");
        getContentPane().add(Date);
        Date.setBounds(1010, 680, 270, 50);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/rainy-hd-1.jpg"))); // NOI18N
        background.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        background.setMinimumSize(new java.awt.Dimension(0, 0));
        getContentPane().add(background);
        background.setBounds(0, 0, 1366, 768);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CreateFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateFileActionPerformed
        new OSFiles().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_CreateFileActionPerformed

    private void OpenImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenImageActionPerformed
    int returnValue = openFile.showOpenDialog(this);
        if(returnValue == JFileChooser.APPROVE_OPTION){
            try{
                originalBI = ImageIO.read(openFile.getSelectedFile());
                new ImageViewer(originalBI).setVisible(true);
            }
            catch (IOException ex) {
                System.err.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_OpenImageActionPerformed

    private void TextEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextEditorActionPerformed
        Editor x = new Editor();
            
// TODO add your handling code here:
    }//GEN-LAST:event_TextEditorActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
           
        System.exit(0);
// TODO add your handling code here:
    }//GEN-LAST:event_ExitActionPerformed

    private void MusicPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MusicPlayerActionPerformed
        // TODO add your handling code here:
        new MP3PlayerGUI().setVisible(true);
    }//GEN-LAST:event_MusicPlayerActionPerformed

    private void MusicPlayerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MusicPlayerMouseReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_MusicPlayerMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Clock;
    private javax.swing.JButton CreateFile;
    private javax.swing.JLabel Date;
    private javax.swing.JButton Exit;
    private javax.swing.JButton MusicPlayer;
    private javax.swing.JButton OpenImage;
    private javax.swing.JButton TextEditor;
    private javax.swing.JLabel background;
    // End of variables declaration//GEN-END:variables

public class PopUpMenu extends JPopupMenu {

        private final JMenuItem background;
        
        public PopUpMenu() {
            background = new JMenuItem("Change background");
            Font font = new Font(getFont().getFontName(), getFont().getStyle() , 14);
            background.setFont(font);
            add(background);
            background.addActionListener(new BackgroundChange());
        }
        
    }

    class PopClickListener extends MouseAdapter {

        @Override
        public void mousePressed(MouseEvent e) {
            if (e.isPopupTrigger()) {
                Pop(e);
            }
        }
        
        @Override
        public void mouseReleased(MouseEvent e) {
            if (e.isPopupTrigger()) {
                Pop(e);
            }
        }
        
        private void Pop(MouseEvent e) {
            PopUpMenu menu = new PopUpMenu();
            menu.show(e.getComponent(), e.getX(), e.getY());
        }
    }
    
    class BackgroundChange implements ActionListener {
        
        private final JFileChooser backgroundChooser;
        
        public BackgroundChange() {
            backgroundChooser = new JFileChooser();
            backgroundChooser.setCurrentDirectory(new java.io.File("E:\\"));
            backgroundChooser.setFileFilter(new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes()));
        }
        
        @Override
        public void actionPerformed(ActionEvent e) {
            int returnValue;
            returnValue = backgroundChooser.showOpenDialog(Home.this);
            if (returnValue == JFileChooser.APPROVE_OPTION) {
                ImageIcon icon = new ImageIcon(backgroundChooser.getSelectedFile().getAbsolutePath());
                Home.this.background.setIcon(icon);
            }
        }
        
    }
}

